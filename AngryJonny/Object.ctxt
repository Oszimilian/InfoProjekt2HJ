#BlueJ class context
comment0.target=Object
comment1.params=
comment1.target=Object()
comment1.text=\r\n\ \ \ Leerer\ Konstruktor\r\n
comment2.params=sizeX\ sizeY
comment2.target=Object(int,\ int)
comment2.text=\r\n\ \ \ Dieser\ Konstruktor\ wird\ ausgef\u00FChrt,\ wenn\ man\ ein\ Objekt\ \u00FCber\ die\ Presetfunktion\ ausf\u00FChrt\r\n\ \ \ X\ und\ Y\ -\ Gr\u00F6\u00DFe\ werden\ \u00FCbergeben\r\n\ \ \ Wenn\ die\ Presetfunktion\ verwendet\ wird,\ dann\ muss\ keine\ gr\u00F6\u00DFe\ mehr\ von\ Hand\ eingeben\ werde,\ deshalb\ wird\ "sizePrepare"\ auf\ false\ gesetzt\r\n
comment3.params=
comment3.target=void\ act()
comment4.params=
comment4.target=void\ intiObject()
comment4.text=\r\n\ \ \ Diese\ Methode\ wird\ nur\ einmal\ ausgef\u00FChrt\ und\ vordert\ den\ Nutzer\ einmal\ auf,\ die\ Gr\u00F6\u00DFe\ des\ Objektes\ einzugeben\r\n\ \ \ Da\ dieses\ Objekt\ auch\ per\ Hand\ erstellt\ werden\ kann\ (ohne\ Konstruktor)\ kann\ ihr\ nicht\ immer\ eine\ Referenz\ zur\ MyWorld-Klasse\ \u00FCbergeben\ werden\r\n\ \ \ Durch\ die\ eine\ "gecastete"\ getWorld-Referenz\ und\ auf\ MyWorld\ und\ die\ dadurch\ aufgerufene\ Getter-Methode,\ welche\ eine\ Referenz\ auf\ das\ ObliqueThrow-Object\ liefert\ kann\ diese\ auch\ lokal\r\n\ \ \ gespeichert\ werden.\r\n\ \ \ Um\ der\ ObliqueThrowMethode\ die\ Referenz\ zu\ diesem\ Abprallobjekt\ zu\ \u00FCbergeben,\ wird\ der\ transmitReference-Methode\ \u00FCber\ "this"\ die\ Referenz\ \u00FCbergeben.\r\n
comment5.params=
comment5.target=void\ exchangeReference()
comment6.params=
comment6.target=void\ prepareSize()
comment6.text=\r\n\ \ \ In\ einem\ Exception-Block\ wird\ eine\ J-Option-Pane\ eingabeaufforderung\ ausgef\u00FChrt\ um\ die\ gr\u00F6\u00DFe\ des\ Abprallobjektes\ zu\ bestimmen\r\n
comment7.params=
comment7.target=void\ prepareImage()
comment7.text=\r\n\ \ \ Diese\ Methode\ erstellt\ eine\ neues\ Bildobjekt\ mit\ der\ eingegebenen\ gr\u00F6\u00DFe\r\n
comment8.params=
comment8.target=int[]\ getLocation()
comment8.text=\r\n\ \ \ Dieses\ Objekt\ berechnet\ die\ Eckpunkte\ eines\ erstellten\ Abprallobjektes\ und\ gibt\ diese\ als\ Array\ zur\u00FCck\r\n
comment9.params=x\ y
comment9.target=int\ detactBounce(int,\ int)
comment9.text=\r\n\ \ \ Diese\ Methode\ \u00FCberpr\u00FCft\ ob\ die\ \u00FCbergebenen\ x\ und\ y\ Werte\ sich\ innerhalb\ bzw.\ am\ Rand\ des\ Abprallobjektes\ befinden\ und\ welche\ Seite\ sie\ ber\u00FChren\r\n
numComments=10
